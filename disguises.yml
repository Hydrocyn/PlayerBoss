# This config file is for saving disguises so that you can reuse them without typing the entire disguise out.

# The best way to use this is with /savedisguise or /saveskin
# /saveskin MyCustomSkin <SkinName> - Where <SkinName> can be an url, file in LibsDisguises/skins or player name
# Then use /disguise player MyCustomSkin - To test it

# You can also use /savedisguise MyCustomDisguise player KingKiller setskin <SkinName> - With the same 3 types of skin
# as above

# It is strongly recommended you use /savedisguise instead of editing this file!
# You can use that command in console or ingame! This helps eliminate user error!

# Here you can create your own disguises and disguise into them using the normal disguise commands
# To create them is super simple, you're using it just like you would in a command. The only tricky thing is that it must be valid yaml. TIP: Enclose the strings in '
# Please note that this is parsed exactly like a command, no spaces in your playername. Bypass by quoting with "!

# You can use /grabskin <Target> <Optional Name> - To get the skin data from a file, another player or website.
# /savedisguise ingame will save a custom disguise in this config, including skin data.
# You can also provide a file or url for 'setSkin'! Just as you would for /grabskin.
# The setSkin argument will be automatically done for all /savedisguise usages, this way the skin never changes.
# /copydisguise <Optional Target Name/UUID> will give you the disguise in a usable string

# You can also use placeholders in the disguises to create disguises that have the command users skin

# %name% - Replaces %name% with the command user's name.
# %skin% - Replaces %skin% with the command user's skin for use with player disguises.
# %displayname% - Replaces %displayname% with the command users displayname

# %target-name% - Finds first viable name from: Player name, entity custom nametag, then entity type (Pig, Horse, Cow)
# %target-skin% - If target is a player, replaces %target-skin% with their skin for use with player disguises
# %target-displayname% - Similar as above
# If target is not a player, will silently fail

# %held-item% - The currently held item in the main item slot
# %offhand-item% - The offhand item
# %armor% - The armor in <Item>,<Item>,<Item>,<Item> format
# %helmet% %chestplate% %leggings% %boots% - Obvious.
# These are best used in armor slots, or in settings that accept items. Can also be used alongside /copydisguise
# to get the string format of an item. By /disguise zombie setiteminmainhand %held-item% - Then /copydisguise.
# But the plugin will attempt to parse to the "simplest" format. So best used with an item that has more custom data
# than just the amount.

# These can be used again for the 'target' by prepending 'target-' to the above. So %target-armor% %target-held-item%
# Finally, you can use %libraryaddict-name% to do all this, but fetch it from the ONLINE player libraryaddict! Case sensitive.

#  The below disguise would give a disguised sheep the nametag; Me: libraryaddict, Them: Sheep
#  Example: 'cow setCustomName "Me: %user-name%, Them: %target-name%"'
#
#  This would give the disguised target a player disguise of their own name, but using the skin of the command user
#  Example2: 'player %target-name% setSkin %user-skin%'

# The following disguises will work if you remove the '#' at the beginning of the line, this creates a disguise which you can use by /disguise libraryaddict
Disguises:
  libraryaddict: player libraryaddict setArmor GOLDEN_BOOTS,GOLDEN_LEGGINGS,GOLDEN_CHESTPLATE,GOLDEN_HELMET
    setItemInMainHand WRITTEN_BOOK setGlowing setSkin {"id":"a149f81bf7844f8987c554afdd4db533","name":"libraryaddict","properties":[{"signature":"afoGOO45t3iGvTyQ732AlugPOvj13/RNjM0/utYlD4PZ4ab4Jopbzr8Px75+ALdkyegoKNcfaH4aXzylMvL6mIwaRdL0af7pfGibMMCMJ8F1RAMl2WqRslKBKXHGS1OXxMweoXW+RRatGgZsUC1BjxHMwd4RuXxrV9ZZ7x1r4xouUXmMzn19wqNO9EeG2q8AgF/hZdrnJPdTTrqJs04r4vCQiFiQsTWiY/B5CBOTh6fw4NpOHeeiJwHOLvN+6xKnAm77nKawaKCSciDwt54EeZoE/Q5ReQUEFgj++jdyHb5PJbhGytr//mazpTVzvlDnO06CZqigbiueV2/ush2gKSXQeimCXeNZzcj/CFgqAmMSEZQW3qHp+DgoqqtBNabJa0FBzpbQQ/jQWzoHfmUC/hTf0A0+hgOe4NqDc+xXYf4A9M/6/0JHz0voWhQJi8QriM699DeeUa31bVdTdKjcyK6Zw6/HIOJt++eFnkf++/zKt0fMiqfdRamSqR/K3w+Kk7cs2D345BNubl5L83YWmLbebUcAPKaza5gi17lUW+h/FitzfKAJZ+xsfSdj27nQLa24xYsyB3Fi5DcFLI2oQt5BYAvViT37sabGOXbDBsrijS4t3++mIbC+pCDiKi0hwZzvy0TPRTle2RMhJ6D66DmpykwqBOxzD73fEsieWX4=","name":"textures","value":"eyJ0aW1lc3RhbXAiOjE0ODA1MjA3NjAxNTksInByb2ZpbGVJZCI6ImExNDlmODFiZjc4NDRmODk4N2M1NTRhZmRkNGRiNTMzIiwicHJvZmlsZU5hbWUiOiJsaWJyYXJ5YWRkaWN0Iiwic2lnbmF0dXJlUmVxdWlyZWQiOnRydWUsInRleHR1cmVzIjp7IlNLSU4iOnsidXJsIjoiaHR0cDovL3RleHR1cmVzLm1pbmVjcmFmdC5uZXQvdGV4dHVyZS84ZTQ5NDVkMzZjZjVhNjI1OGZjOGY4ZTM5NmZlZWYzMzY1ZjM2MjgyYjE2MjY0OWI2M2NmZWQzNzNmNzY1OSJ9LCJDQVBFIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZWZkNjFjM2M0YWM4OGYxYTM0NjhmYmRlZWY0NWNlYzg5ZTVhZmI4N2I5N2ExYTg0NWJmYjNjNjRmZDBiODgzIn19fQ=="}]}
  XYEVOLVE: player <inherit> setSkin {"uuid":"92611a57-275d-490f-ab45-7902949d3144","name":"Unknown","textureProperties":[{"name":"textures","value":"ewogICJ0aW1lc3RhbXAiIDogMTc0NTExNTk1NDQ2OSwKICAicHJvZmlsZUlkIiA6ICI1OGZmZWI5NTMxNGQ0ODcwYTQwYjVjYjQyZDRlYTU5OCIsCiAgInByb2ZpbGVOYW1lIiA6ICJTa2luREJuZXQiLAogICJzaWduYXR1cmVSZXF1aXJlZCIgOiB0cnVlLAogICJ0ZXh0dXJlcyIgOiB7CiAgICAiU0tJTiIgOiB7CiAgICAgICJ1cmwiIDogImh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMTQyOWZhYTY1YWVlNzllNmYyN2Y1NmMyZGE3ZDViZGMwM2YzZGJlMGEyMDBmYTU5ZTYxNzZmMjg1YTZhZTdhNyIsCiAgICAgICJtZXRhZGF0YSIgOiB7CiAgICAgICAgIm1vZGVsIiA6ICJzbGltIgogICAgICB9CiAgICB9CiAgfQp9","signature":"wdXcYJ7pxzT6U79bml97IfbFd9Zv1fLQCoZUQtU7M+E6kaKxr4hOrkp6+6fOb0mp7Vi9bSOAp+WnFkGKsrDGzSYXdEuUHQg/I6QlPaHDpZeoT4ctWmFejm+fOCHkJGC5lVtS1rWz9B4t/CXfvskq+WVfHG4+otNjhkC2BKGt5Aq/HlUIUEP0D+AcU1l9hHmzsmr/s8WMUxqS0sM/xcCP6PLcYaGSuoYqPGqkYl19fi4pbTuzCs1wiv/27WCUDUsMjxxZosgJYAMy/jWQ0LuYn6xb14hRfoE2UkD0eZYYVBIwKe/lJ6tdwdoyLhYhTeaYMSpHidK4vWO/vvOpK4uXdQH2JNdZPIqpfexGgZzUEIAoh3aHpgzE+0Z39saWqSURwa1K/Xv0YI9SB24396p3xQ+UHYP+q9cn+Ehas0WnESjd8flS+VuMfWrpQ6FvHO6FnAli6H5C4Yb3jf5ypVrWDA7j+Y0Ei3LzbLORyfSURTmUDGp2uhUYKhwk6fIo4UnI9UCXNMnrOuRxPviUqWRPaxlwfH3FM/KqeD9zz60lwrTf+6816gIMPEejhshy6khAjfchTg+fn3ft407tR/QipFaZ2DUjwm9aRttZn7+zCuR/fkpJEs5AczDAiLH8/9/sYHQys/oEOo9RwTgOlJjWX969D64vKHcykUMu2x1pvuo="}]}
    setDynamicName
  Hydrocyn: player <inherit> setSkin {"uuid":"40cb6ced-30ba-47b6-8ce6-e11455283609","name":"Unknown","textureProperties":[{"name":"textures","value":"ewogICJ0aW1lc3RhbXAiIDogMTc0NTExODEyMjU0MCwKICAicHJvZmlsZUlkIiA6ICI1MzgyNzM1OGIzOTc0ZmJiOTg0OTY5MWM5Yzg3NTA1YiIsCiAgInByb2ZpbGVOYW1lIiA6ICJPdmV "}]}
    setDynamicName

#  Librarian:
#    Name: libaddict:librarian # Must be a minecraft:sheep type of name, if invalid will not load
#    Register: true # This means Lib's Disguises should register the EntityType in nms, not another plugin
#    Type: LIVING # MISC, LIVING - What type of disguise type, doesn't support custom packets
#    Mod: LibAttacks # The mod they need installed
# If exists, will prevent anyone without the mod from joining with this error
#    Required: 'Install LibAttacks! Download it from our site!'
#    Channels: librarian:channel|1 # Sometimes a mod needs a channel enabled.. Seperate each channel with a comma.
#    The channels also want a protocol version, which is normally 1 or 1.0
